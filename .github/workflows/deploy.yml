name: Build, Test, and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/flask-app
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest tests/

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: "root"
          password: ${{ secrets.HOSTING_PASSWORD }}
          script: |
            apt-get update
            apt-get install -y docker.io certbot

            # Останавливаем Nginx перед запуском Certbot
            sudo systemctl stop nginx
            certbot certonly --standalone -d mirea-api.ru --non-interactive --agree-tos -m m646856@yandex.ru
            # Перезапускаем Nginx после обновления сертификатов
            sudo systemctl start nginx

      - name: Create directory on server
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: "root"
          password: ${{ secrets.HOSTING_PASSWORD }}
          script: |
            mkdir -p /home/${{ secrets.HOSTING_NAME }}/app/

      - name: Copy Deployment Files
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: "root"
          password: ${{ secrets.HOSTING_PASSWORD }}
          source: docker-compose.yml
          target: "/home/${{ secrets.HOSTING_NAME }}/app/"
          rm: true
          debug: true

      - name: Copy Nginx Configuration
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: "root"
          password: ${{ secrets.HOSTING_PASSWORD }}
          source: nginx.conf
          target: "/home/${{ secrets.HOSTING_NAME }}/app/"
          rm: false 
          debug: true

      - name: Deploy New Docker Image
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: "root"
          password: ${{ secrets.HOSTING_PASSWORD }}
          script: |
            cd /home/${{ secrets.HOSTING_NAME }}/app
            docker-compose down  # Остановка существующих контейнеров
            docker pull ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
            docker-compose up -d  # Запуск контейнеров с обновленным образом
          debug: true
